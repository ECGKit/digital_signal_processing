%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 60 191 750 537 
%%LanguageLevel: 1
%%Creator: CorelDRAW
%%Title: causality.eps
%%CreationDate: Mon Jun 29 10:03:34 2009
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 13.0.0.739
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
348.56334 268.91660 749.62942 454.26671 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.99984 1.99984 0.00000 @w
348.56334 445.58617 m
348.56334 268.91660 L
740.94888 268.91660 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
353.79156 444.76214 m
348.56334 454.26671 L
343.33512 444.76214 L
353.79156 444.76214 L
f
@J
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
740.12485 274.14482 m
749.62942 268.91660 L
740.12485 263.68838 L
740.12485 274.14482 L
f
@J

@rax %Note: Object
348.56334 193.25962 667.97178 411.50920 @E
/$fm 0 def
0 J 0 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 3.99997 3.99997 0.00000 @w
348.56334 269.10850 m
351.81354 305.95861 L
355.01357 338.45868 L
358.26350 365.65880 L
361.46353 386.75906 L
364.71373 401.50913 L
367.91376 409.65902 L
371.16369 411.50920 L
374.36372 407.45906 L
377.61392 398.05909 L
380.81395 384.15912 L
384.06416 366.65943 L
387.26419 346.55924 L
390.51411 324.85946 L
393.71414 302.60948 L
396.96435 280.65940 L
400.16438 260.00957 L
403.41430 241.30970 L
406.61433 225.20976 L
409.86454 212.10973 L
413.11446 202.35969 L
416.31449 196.05969 L
419.56469 193.25962 L
422.76472 193.70976 L
426.01493 197.20970 L
429.21496 203.35975 L
432.46517 211.70976 L
435.66520 221.70983 L
438.91540 232.90980 L
442.11543 244.65997 L
445.36535 256.50992 L
448.56567 267.95991 L
451.81559 278.56006 L
455.01562 287.96031 L
458.26583 295.86019 L
461.46586 302.06041 L
464.71606 306.41046 L
467.91609 308.96050 L
471.16630 309.66038 L
474.36633 308.66060 L
477.61654 306.11055 L
480.86646 302.31071 L
484.06649 297.41074 L
487.31669 291.76072 L
490.51672 285.61068 L
493.76693 279.26079 L
496.96696 273.01096 L
500.21717 267.06104 L
503.41720 261.71093 L
506.66740 257.01109 L
509.86743 253.21096 L
513.11735 250.36101 L
516.31767 248.46123 L
519.56759 247.56123 L
522.76762 247.56123 L
526.01783 248.51112 L
529.21786 250.16117 L
532.46806 252.51137 L
535.66809 255.31143 L
538.91830 258.46129 L
542.16822 261.81128 L
545.36854 265.16126 L
548.61846 268.46135 L
551.81849 271.51143 L
555.06869 274.21143 L
558.26872 276.51146 L
561.51893 278.31146 L
564.71896 279.61172 L
567.96888 280.41165 L
571.16891 280.66167 L
574.41912 280.41165 L
577.61915 279.71178 L
580.86935 278.66183 L
584.06939 277.31197 L
587.31959 275.71209 L
590.51962 273.96198 L
593.76983 272.16198 L
596.96986 270.41216 L
600.21978 268.71222 L
603.42009 267.16224 L
606.67002 265.76220 L
609.92022 264.66236 L
613.12025 263.81225 L
616.37046 263.26233 L
619.57049 262.96243 L
622.82069 262.96243 L
626.02072 263.21244 L
629.27065 263.66230 L
632.47096 264.31257 L
635.72088 265.06233 L
638.92091 265.96233 L
642.17112 266.91250 L
645.37115 267.86268 L
648.62135 268.81257 L
651.82139 269.71257 L
655.07159 270.46261 L
658.27162 271.16277 L
661.52183 271.66280 L
664.72186 272.06277 L
667.97178 272.31279 L
S

@rax %Note: Object
742.50879 241.70428 749.00069 258.66057 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
748.69682 243.75628 m
749.00069 241.89250 L
748.40882 241.76835 747.87676 241.70428 747.40876 241.70428 c
746.64085 241.70428 746.04869 241.82447 745.62491 242.06854 c
745.20482 242.30835 744.90888 242.62838 744.73682 243.02438 c
744.56476 243.41641 744.47688 244.24838 744.47688 245.51235 c
744.47688 252.67238 L
742.92888 252.67238 L
742.92888 254.31250 L
744.47688 254.31250 L
744.47688 257.39660 L
746.57679 258.66057 L
746.57679 254.31250 L
748.69682 254.31250 L
748.69682 252.67238 L
746.57679 252.67238 L
746.57679 245.39641 l
746.57679 244.79235 746.61279 244.40854 746.68479 244.23647 c
746.76076 244.06441 746.88094 243.92835 747.04876 243.82431 c
747.21685 243.72454 747.45694 243.67238 747.76876 243.67238 c
748.00488 243.67238 748.31272 243.70044 748.69682 243.75628 C
@c
F

@rax %Note: Object
129.04554 269.10850 348.56334 269.15981 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 3.99997 3.99997 0.00000 @w
348.56334 269.10850 m
129.04554 269.15981 L
S

@rax %Note: Object
345.00359 247.50935 357.20362 265.05326 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
345.99969 256.27323 m
345.99969 258.30539 346.20746 259.94126 346.62756 261.17745 c
347.04369 262.41732 347.66759 263.37345 348.49162 264.04526 c
349.31565 264.71735 350.35172 265.05326 351.59953 265.05326 c
352.52362 265.05326 353.33150 264.86532 354.02769 264.49342 c
354.72359 264.12548 355.29562 263.58945 355.75172 262.88929 c
356.20356 262.18942 356.55959 261.33732 356.81556 260.33329 c
357.07578 259.32926 357.20362 257.97742 357.20362 256.27323 c
357.20362 254.25723 356.99556 252.63326 356.58369 251.39339 c
356.16756 250.15323 355.54762 249.19739 354.72359 248.52132 c
353.89956 247.84526 352.85953 247.50935 351.59953 247.50935 c
349.94353 247.50935 348.64356 248.10123 347.69962 249.28923 c
346.56746 250.71732 345.99969 253.04939 345.99969 256.27323 c
@c
348.16762 256.27323 m
348.16762 253.45332 348.49956 251.57735 349.15975 250.64135 c
349.81965 249.70932 350.63150 249.24132 351.59953 249.24132 c
352.57153 249.24132 353.38365 249.71329 354.04356 250.64929 c
354.70375 251.58529 355.03569 253.46126 355.03569 256.27323 c
355.03569 259.10135 354.70375 260.98129 354.04356 261.90935 c
353.38365 262.84139 352.56359 263.30542 351.57969 263.30542 c
350.60769 263.30542 349.83553 262.89326 349.25556 262.07348 c
348.53159 261.02948 348.16762 259.09342 348.16762 256.27323 c
@c
F

@rax %Note: Object
230.73846 279.26787 282.10280 296.72787 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
231.20646 279.54794 m
231.20646 281.26006 L
239.13043 290.35191 L
238.23043 290.30400 237.43843 290.28387 236.75046 290.28387 c
231.67446 290.28387 L
231.67446 291.99203 L
241.84658 291.99203 L
241.84658 290.59994 L
235.11061 282.70006 L
233.81036 281.26006 L
234.75458 281.32781 235.64239 281.36381 236.47039 281.36381 c
242.22246 281.36381 L
242.22246 279.54794 L
231.20646 279.54794 L
@c
F

@rax %Note: Object
230.73846 279.26787 282.10280 296.72787 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
252.83877 283.55584 m
255.01861 283.28797 L
254.67477 282.01181 254.03868 281.02394 253.11061 280.31981 c
252.17858 279.61994 250.99058 279.26787 249.54661 279.26787 c
247.72677 279.26787 246.28252 279.82800 245.21868 280.94797 c
244.15058 282.06794 243.61852 283.64003 243.61852 285.66397 c
243.61852 287.75991 244.15852 289.38387 245.23455 290.53984 c
246.31455 291.69609 247.71061 292.27606 249.43068 292.27606 c
251.09461 292.27606 252.45468 291.70800 253.50661 290.57584 c
254.56280 289.44397 255.09061 287.84806 255.09061 285.79606 c
255.09061 285.66794 255.08665 285.48000 255.07871 285.23197 C
245.79865 285.23197 L
245.87461 283.86397 246.26268 282.81600 246.95858 282.09203 c
247.65477 281.36381 248.51877 280.99984 249.55880 280.99984 c
250.33068 280.99984 250.99058 281.20394 251.53880 281.61184 c
252.08674 282.01606 252.51874 282.66406 252.83877 283.55584 C
@c
245.91458 286.96791 m
252.86258 286.96791 L
252.77074 288.01191 252.50258 288.79994 252.06661 289.32009 c
251.39480 290.13194 250.52258 290.53984 249.45477 290.53984 c
248.48674 290.53984 247.67065 290.21584 247.01074 289.56784 c
246.35055 288.91984 245.98658 288.05187 245.91458 286.96791 C
@c
F

@rax %Note: Object
230.73846 279.26787 282.10280 296.72787 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
257.64661 279.54794 m
257.64661 291.99203 L
259.54271 291.99203 L
259.54271 290.10784 L
260.02658 290.98800 260.47474 291.57194 260.88661 291.85200 c
261.29480 292.13206 261.74665 292.27606 262.23874 292.27606 c
262.95080 292.27606 263.67080 292.04787 264.40668 291.59603 C
263.67874 289.63587 L
263.16680 289.94400 262.65061 290.09594 262.13471 290.09594 c
261.67068 290.09594 261.25880 289.95591 260.89087 289.68009 c
260.52265 289.40003 260.26271 289.01594 260.10680 288.52384 c
259.87068 287.77606 259.75474 286.95600 259.75474 286.06394 c
259.75474 279.54794 L
257.64661 279.54794 L
@c
F

@rax %Note: Object
230.73846 279.26787 282.10280 296.72787 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
264.87468 285.77197 m
264.87468 288.07597 265.51474 289.78384 266.79883 290.89191 c
267.86665 291.81203 269.17087 292.27606 270.71065 292.27606 c
272.42277 292.27606 273.82280 291.71594 274.90677 290.59200 c
275.99471 289.47203 276.53471 287.92403 276.53471 285.94800 c
276.53471 284.34387 276.29490 283.08387 275.81471 282.16800 c
275.33480 281.24787 274.63465 280.53581 273.71877 280.02784 c
272.79865 279.51987 271.79887 279.26787 270.71065 279.26787 c
268.97074 279.26787 267.56277 279.82403 266.48674 280.94400 c
265.41071 282.06000 264.87468 283.66809 264.87468 285.77197 c
@c
267.04261 285.77197 m
267.04261 284.17606 267.39071 282.98381 268.08661 282.19181 c
268.78280 281.39584 269.65871 280.99984 270.71065 280.99984 c
271.75861 280.99984 272.63083 281.39981 273.32674 282.19606 c
274.01868 282.99203 274.36677 284.20809 274.36677 285.84000 c
274.36677 287.38006 274.01868 288.54794 273.31880 289.33994 c
272.61865 290.13194 271.75068 290.52794 270.71065 290.52794 c
269.65871 290.52794 268.78280 290.13194 268.08661 289.34391 c
267.39071 288.55587 267.04261 287.36391 267.04261 285.77197 c
@c
F

@rax %Note: Object
230.73846 279.26787 282.10280 296.72787 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
280.13471 283.81209 m
279.49068 292.92009 L
279.49068 296.72787 L
282.10280 296.72787 L
282.10280 292.92009 L
281.49477 283.81209 L
280.13471 283.81209 L
@c
279.58280 279.54794 m
279.58280 281.95200 L
282.01068 281.95200 L
282.01068 279.54794 L
279.58280 279.54794 L
@c
F

@rax %Note: Object
153.96378 438.84113 258.38306 504.10318 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.99984 1.99984 0.00000 @w
153.96378 504.10318 m
258.38306 504.10318 L
258.38306 438.84113 L
153.96378 438.84113 L
153.96378 504.10318 L
@c
S

@rax %Note: Object
174.13569 465.85247 227.79553 483.31247 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
176.10378 466.13254 m
176.10378 483.31247 L
187.69578 483.31247 L
187.69578 481.28457 L
178.37972 481.28457 L
178.37972 475.96450 L
186.43975 475.96450 L
186.43975 473.93660 L
178.37972 473.93660 L
178.37972 466.13254 L
176.10378 466.13254 L
@c
F

@rax %Note: Object
174.13569 465.85247 227.79553 483.31247 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
190.38756 480.88460 m
190.38756 483.31247 L
192.49965 483.31247 L
192.49965 480.88460 L
190.38756 480.88460 L
@c
190.38756 466.13254 m
190.38756 478.57663 L
192.49965 478.57663 L
192.49965 466.13254 L
190.38756 466.13254 L
@c
F

@rax %Note: Object
174.13569 465.85247 227.79553 483.31247 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
195.66369 466.13254 m
195.66369 483.31247 L
197.77153 483.31247 L
197.77153 466.13254 L
195.66369 466.13254 L
@c
F

@rax %Note: Object
174.13569 465.85247 227.79553 483.31247 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
205.64759 468.02041 m
205.95146 466.15663 L
205.35959 466.03247 204.82753 465.96841 204.35953 465.96841 c
203.59162 465.96841 202.99946 466.08860 202.57569 466.33266 c
202.15559 466.57247 201.85965 466.89250 201.68759 467.28850 c
201.51553 467.68054 201.42765 468.51250 201.42765 469.77647 c
201.42765 476.93650 L
199.87965 476.93650 L
199.87965 478.57663 L
201.42765 478.57663 L
201.42765 481.66072 L
203.52756 482.92469 L
203.52756 478.57663 L
205.64759 478.57663 L
205.64759 476.93650 L
203.52756 476.93650 L
203.52756 469.66054 l
203.52756 469.05647 203.56356 468.67266 203.63556 468.50060 c
203.71153 468.32854 203.83172 468.19247 203.99953 468.08844 c
204.16762 467.98866 204.40772 467.93650 204.71953 467.93650 c
204.95565 467.93650 205.26350 467.96457 205.64759 468.02041 C
@c
F

@rax %Note: Object
174.13569 465.85247 227.79553 483.31247 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
216.22762 470.14044 m
218.40746 469.87257 L
218.06362 468.59641 217.42753 467.60854 216.49946 466.90441 c
215.56743 466.20454 214.37943 465.85247 212.93546 465.85247 c
211.11562 465.85247 209.67137 466.41260 208.60753 467.53257 c
207.53943 468.65254 207.00737 470.22463 207.00737 472.24857 c
207.00737 474.34450 207.54737 475.96847 208.62340 477.12444 c
209.70340 478.28069 211.09946 478.86066 212.81953 478.86066 c
214.48346 478.86066 215.84353 478.29260 216.89546 477.16044 c
217.95165 476.02857 218.47946 474.43266 218.47946 472.38066 c
218.47946 472.25254 218.47550 472.06460 218.46756 471.81657 C
209.18750 471.81657 L
209.26346 470.44857 209.65153 469.40060 210.34743 468.67663 c
211.04362 467.94841 211.90762 467.58444 212.94765 467.58444 c
213.71953 467.58444 214.37943 467.78854 214.92765 468.19644 c
215.47559 468.60066 215.90759 469.24866 216.22762 470.14044 C
@c
209.30343 473.55250 m
216.25143 473.55250 L
216.15959 474.59650 215.89143 475.38454 215.45546 475.90469 c
214.78365 476.71654 213.91143 477.12444 212.84362 477.12444 c
211.87559 477.12444 211.05950 476.80044 210.39959 476.15244 c
209.73940 475.50444 209.37543 474.63647 209.30343 473.55250 C
@c
F

@rax %Note: Object
174.13569 465.85247 227.79553 483.31247 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
221.03546 466.13254 m
221.03546 478.57663 L
222.93156 478.57663 L
222.93156 476.69244 L
223.41543 477.57260 223.86359 478.15654 224.27546 478.43660 c
224.68365 478.71666 225.13550 478.86066 225.62759 478.86066 c
226.33965 478.86066 227.05965 478.63247 227.79553 478.18063 C
227.06759 476.22047 L
226.55565 476.52860 226.03946 476.68054 225.52356 476.68054 c
225.05953 476.68054 224.64765 476.54050 224.27972 476.26469 c
223.91150 475.98463 223.65156 475.60054 223.49565 475.10844 c
223.25953 474.36066 223.14359 473.54060 223.14359 472.64854 c
223.14359 466.13254 L
221.03546 466.13254 L
@c
F

@rax %Note: Object
107.68706 469.69172 153.99808 469.69285 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.99984 1.99984 0.00000 @w
107.68706 469.69228 m
142.39361 469.69228 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
153.99808 469.69228 m
141.75326 475.81257 L
141.75326 463.56803 L
153.99808 469.69228 L
f
@J

@rax %Note: Object
258.38306 471.47159 310.62302 471.47272 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.99984 1.99984 0.00000 @w
258.38306 471.47216 m
299.06447 471.47216 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.99219 1.99219 0 @w
310.62302 471.47216 m
298.42696 477.56835 L
298.42696 465.37200 L
310.62302 471.47216 L
f
@J

@rax %Note: Object
63.20211 435.86617 114.24898 477.41357 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 1.99984 1.99984 0.00000 @w
63.20211 435.86617 m
84.56060 435.86617 L
84.56060 477.41357 L
84.56060 435.86617 L
105.56844 435.86617 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
104.74441 441.09439 m
114.24898 435.86617 L
104.74441 430.63795 L
104.74441 441.09439 L
f
@J

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
70.48488 518.92696 m
70.48488 520.49906 L
69.69685 519.26287 68.53691 518.64690 67.00507 518.64690 c
66.01294 518.64690 65.10104 518.91902 64.26907 519.46696 c
63.43682 520.01093 62.79307 520.77487 62.33301 521.75906 c
61.87691 522.73899 61.64901 523.86293 61.64901 525.13909 c
61.64901 526.37896 61.85707 527.50687 62.26894 528.51912 c
62.68507 529.53109 63.30501 530.30693 64.13301 530.84296 c
64.96101 531.38296 65.88907 531.65509 66.91294 531.65509 c
67.66101 531.65509 68.32885 531.49493 68.91307 531.17915 c
69.50098 530.86309 69.97691 530.45093 70.34485 529.94296 C
70.34485 536.10690 L
72.44107 536.10690 L
72.44107 518.92696 L
70.48488 518.92696 L
@c
63.81694 525.13909 m
63.81694 523.54290 64.15285 522.35093 64.82494 521.56290 c
65.49704 520.77487 66.28904 520.37887 67.20491 520.37887 c
68.12504 520.37887 68.90910 520.75899 69.55285 521.51102 c
70.19688 522.26306 70.52088 523.41506 70.52088 524.96306 c
70.52088 526.66696 70.19291 527.91506 69.53698 528.71102 c
68.88104 529.51096 68.07288 529.90696 67.10910 529.90696 c
66.17310 529.90696 65.38904 529.52287 64.76088 528.75893 c
64.13301 527.99499 63.81694 526.78687 63.81694 525.13909 c
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
84.27713 522.93487 m
86.45698 522.66699 L
86.11313 521.39083 85.47704 520.40296 84.54898 519.69883 c
83.61694 518.99896 82.42894 518.64690 80.98498 518.64690 c
79.16513 518.64690 77.72088 519.20702 76.65704 520.32699 c
75.58894 521.44696 75.05688 523.01906 75.05688 525.04299 c
75.05688 527.13893 75.59688 528.76290 76.67291 529.91887 c
77.75291 531.07512 79.14898 531.65509 80.86904 531.65509 c
82.53298 531.65509 83.89304 531.08702 84.94498 529.95487 c
86.00117 528.82299 86.52898 527.22709 86.52898 525.17509 c
86.52898 525.04696 86.52501 524.85902 86.51707 524.61099 C
77.23701 524.61099 L
77.31298 523.24299 77.70104 522.19502 78.39694 521.47106 c
79.09313 520.74283 79.95713 520.37887 80.99717 520.37887 c
81.76904 520.37887 82.42894 520.58296 82.97717 520.99087 c
83.52510 521.39509 83.95710 522.04309 84.27713 522.93487 C
@c
77.35294 526.34693 m
84.30094 526.34693 L
84.20910 527.39093 83.94094 528.17896 83.50498 528.69912 c
82.83317 529.51096 81.96094 529.91887 80.89313 529.91887 c
79.92510 529.91887 79.10901 529.59487 78.44910 528.94687 c
77.78891 528.29887 77.42494 527.43090 77.35294 526.34693 C
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
89.06117 518.92696 m
89.06117 536.10690 L
91.16901 536.10690 L
91.16901 518.92696 L
89.06117 518.92696 L
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
99.04507 520.81483 m
99.34894 518.95106 L
98.75707 518.82690 98.22501 518.76283 97.75701 518.76283 c
96.98910 518.76283 96.39694 518.88302 95.97317 519.12709 c
95.55307 519.36690 95.25713 519.68693 95.08507 520.08293 c
94.91301 520.47496 94.82513 521.30693 94.82513 522.57090 c
94.82513 529.73093 L
93.27713 529.73093 L
93.27713 531.37106 L
94.82513 531.37106 L
94.82513 534.45515 L
96.92504 535.71912 L
96.92504 531.37106 L
99.04507 531.37106 L
99.04507 529.73093 L
96.92504 529.73093 L
96.92504 522.45496 l
96.92504 521.85090 96.96104 521.46709 97.03304 521.29502 c
97.10901 521.12296 97.22920 520.98690 97.39701 520.88287 c
97.56510 520.78309 97.80520 520.73093 98.11701 520.73093 c
98.35313 520.73093 98.66098 520.75899 99.04507 520.81483 C
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
109.22910 520.46306 m
108.44504 519.79890 107.69301 519.33090 106.97301 519.05509 c
106.24904 518.78296 105.47291 518.64690 104.64491 518.64690 c
103.27691 518.64690 102.22894 518.97883 101.49307 519.64696 c
100.76088 520.31509 100.39294 521.17087 100.39294 522.20693 c
100.39294 522.81893 100.52901 523.37509 100.80907 523.87909 c
101.08488 524.38309 101.44885 524.78702 101.89701 525.09090 c
102.34885 525.39506 102.85285 525.62693 103.41694 525.78312 c
103.82910 525.89112 104.45301 525.99912 105.28894 526.09890 c
106.99313 526.30299 108.24888 526.54309 109.05307 526.82712 C
109.06101 527.11512 109.06498 527.29909 109.06498 527.37506 c
109.06498 528.23509 108.86513 528.84312 108.46488 529.19093 c
107.92913 529.67112 107.12494 529.90696 106.06507 529.90696 c
105.07294 529.90696 104.34104 529.73490 103.86510 529.38709 c
103.39285 529.03899 103.04504 528.42302 102.81685 527.53890 C
100.75691 527.82293 L
100.94485 528.70309 101.25298 529.41912 101.68101 529.95912 c
102.10904 530.50309 102.73294 530.92290 103.54507 531.21515 c
104.35691 531.50712 105.29688 531.65509 106.36894 531.65509 c
107.43307 531.65509 108.29310 531.52696 108.95698 531.27893 c
109.62113 531.02693 110.10898 530.71512 110.42504 530.33499 c
110.73713 529.95487 110.95313 529.47893 111.08098 528.89896 c
111.14901 528.53896 111.18501 527.89096 111.18501 526.95496 c
111.18501 524.14299 l
111.18501 522.17887 111.22894 520.93899 111.32107 520.42309 c
111.40894 519.90293 111.58894 519.40290 111.85313 518.92696 C
109.64891 518.92696 L
109.43291 519.36293 109.28891 519.87487 109.22910 520.46306 C
@c
109.05307 525.17509 m
108.28488 524.85902 107.13713 524.59512 105.60898 524.37487 c
104.74101 524.25099 104.12504 524.11096 103.76901 523.95506 c
103.40901 523.79887 103.12894 523.57096 102.93704 523.26709 c
102.74088 522.96690 102.64110 522.63496 102.64110 522.26702 c
102.64110 521.70293 102.85710 521.23493 103.28088 520.85906 c
103.70494 520.48687 104.32913 520.29893 105.14891 520.29893 c
105.96104 520.29893 106.68501 520.47496 107.31713 520.83099 c
107.94898 521.18702 108.41698 521.67487 108.71291 522.29083 c
108.94110 522.76706 109.05307 523.47090 109.05307 524.39896 c
109.05307 525.17509 L
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
62.41294 487.34674 m
62.41294 504.55899 L
64.33285 504.55899 L
64.33285 502.94296 L
64.78498 503.57480 65.29691 504.05102 65.86894 504.36709 c
66.43701 504.68287 67.12894 504.84302 67.94107 504.84302 c
69.00491 504.84302 69.94091 504.56693 70.75304 504.02296 c
71.56885 503.47502 72.18085 502.70287 72.59301 501.70706 c
73.00913 500.71096 73.21691 499.61906 73.21691 498.43106 c
73.21691 497.15887 72.98901 496.01083 72.52894 494.99093 c
72.07285 493.97102 71.40898 493.19093 70.53704 492.64696 c
69.66510 492.10696 68.74894 491.83483 67.78885 491.83483 c
67.08501 491.83483 66.45685 491.98280 65.89701 492.27902 c
65.33688 492.57496 64.88107 492.95083 64.52107 493.40296 C
64.52107 487.34674 L
62.41294 487.34674 L
@c
64.32094 498.26693 m
64.32094 496.66706 64.64494 495.48302 65.29294 494.71483 c
65.94094 493.95090 66.72898 493.56680 67.64910 493.56680 c
68.58510 493.56680 69.38901 493.96280 70.05685 494.75877 c
70.72498 495.55077 71.06088 496.77902 71.06088 498.44296 c
71.06088 500.03093 70.73291 501.21496 70.08094 502.00696 c
69.42898 502.79499 68.64888 503.19099 67.74491 503.19099 c
66.84491 503.19099 66.04894 502.77090 65.35701 501.93099 c
64.66507 501.09080 64.32094 499.86680 64.32094 498.26693 c
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
83.91713 492.11490 m
83.91713 493.94296 L
82.94513 492.53499 81.62901 491.83483 79.96507 491.83483 c
79.23317 491.83483 78.54491 491.97487 77.90910 492.25493 c
77.27301 492.53499 76.80104 492.89102 76.49291 493.31480 c
76.18110 493.74283 75.96510 494.26299 75.84094 494.87896 c
75.75704 495.29480 75.71310 495.95102 75.71310 496.85102 c
75.71310 504.55899 L
77.82094 504.55899 L
77.82094 497.65890 l
77.82094 496.55480 77.86488 495.81496 77.94907 495.43087 c
78.08513 494.87499 78.36491 494.44299 78.79294 494.12296 c
79.22494 493.80690 79.75701 493.65099 80.38913 493.65099 c
81.02098 493.65099 81.61313 493.81087 82.16901 494.13487 c
82.72517 494.45887 83.11691 494.90277 83.34510 495.45893 c
83.57698 496.01877 83.69291 496.83090 83.69291 497.89106 c
83.69291 504.55899 L
85.80104 504.55899 L
85.80104 492.11490 L
83.91713 492.11490 L
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
89.06117 492.11490 m
89.06117 509.29483 L
91.16901 509.29483 L
91.16901 492.11490 L
89.06117 492.11490 L
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
93.59717 495.83083 m
95.68091 496.15880 L
95.79713 495.32287 96.12510 494.68280 96.66113 494.23493 c
97.19320 493.79102 97.94098 493.56680 98.90504 493.56680 c
99.87307 493.56680 100.59307 493.76693 101.06107 494.15896 c
101.52907 494.55496 101.76520 495.01899 101.76520 495.54680 c
101.76520 496.02699 101.55713 496.39890 101.14101 496.67499 c
100.85301 496.86293 100.13301 497.09906 98.98498 497.38706 c
97.44094 497.77880 96.36491 498.11499 95.76907 498.40299 c
95.17294 498.68702 94.71713 499.08302 94.40901 499.58702 c
94.10117 500.09102 93.94498 500.64690 93.94498 501.25493 c
93.94498 501.81080 94.07310 502.32302 94.32907 502.79499 c
94.58107 503.27093 94.92917 503.66296 95.36513 503.97506 c
95.69310 504.21487 96.14098 504.42293 96.70507 504.59102 c
97.27313 504.75883 97.88117 504.84302 98.52917 504.84302 c
99.50513 504.84302 100.36120 504.69902 101.10104 504.41896 c
101.84117 504.13890 102.38513 503.75906 102.73720 503.27887 c
103.08898 502.79499 103.32907 502.15493 103.46117 501.35102 C
101.40094 501.06699 L
101.30513 501.70706 101.03301 502.20680 100.58513 502.56680 c
100.13698 502.92680 99.50117 503.10680 98.68110 503.10680 c
97.71307 503.10680 97.02113 502.94693 96.60898 502.62690 c
96.19313 502.30687 95.98507 501.93099 95.98507 501.50296 c
95.98507 501.22687 96.07294 500.98280 96.24501 500.76283 c
96.41707 500.53493 96.68494 500.35096 97.05317 500.19902 c
97.26520 500.12306 97.88513 499.94306 98.91694 499.66299 c
100.40910 499.26302 101.44913 498.93902 102.03704 498.68306 c
102.62920 498.43106 103.09294 498.05887 103.42913 497.57499 c
103.76504 497.09083 103.93313 496.49102 103.93313 495.77102 c
103.93313 495.06690 103.72507 494.40699 103.31717 493.78280 c
102.90501 493.16287 102.31313 492.68296 101.54098 492.34280 c
100.76910 492.00293 99.89320 491.83483 98.91694 491.83483 c
97.29694 491.83483 96.06501 492.17102 95.21717 492.84283 c
94.36904 493.51493 93.82904 494.51102 93.59717 495.83083 C
@c
F

@rax %Note: Object
60.82894 487.34674 117.20920 536.10690 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
114.95735 496.12280 m
117.13720 495.85493 L
116.79335 494.57877 116.15726 493.59090 115.22920 492.88677 c
114.29717 492.18690 113.10917 491.83483 111.66520 491.83483 c
109.84535 491.83483 108.40110 492.39496 107.33726 493.51493 c
106.26917 494.63490 105.73710 496.20699 105.73710 498.23093 c
105.73710 500.32687 106.27710 501.95083 107.35313 503.10680 c
108.43313 504.26306 109.82920 504.84302 111.54926 504.84302 c
113.21320 504.84302 114.57326 504.27496 115.62520 503.14280 c
116.68139 502.01093 117.20920 500.41502 117.20920 498.36302 c
117.20920 498.23490 117.20523 498.04696 117.19729 497.79893 C
107.91723 497.79893 L
107.99320 496.43093 108.38126 495.38296 109.07717 494.65899 c
109.77335 493.93077 110.63735 493.56680 111.67739 493.56680 c
112.44926 493.56680 113.10917 493.77090 113.65739 494.17880 c
114.20532 494.58302 114.63732 495.23102 114.95735 496.12280 C
@c
108.03317 499.53487 m
114.98117 499.53487 L
114.88932 500.57887 114.62117 501.36690 114.18520 501.88706 c
113.51339 502.69890 112.64117 503.10680 111.57335 503.10680 c
110.60532 503.10680 109.78923 502.78280 109.12932 502.13480 c
108.46913 501.48680 108.10517 500.61883 108.03317 499.53487 C
@c
F

@rax %Note: Object
105.78132 408.40271 112.27323 425.35899 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
111.96935 410.45471 m
112.27323 408.59093 L
111.68135 408.46677 111.14929 408.40271 110.68129 408.40271 c
109.91339 408.40271 109.32123 408.52290 108.89745 408.76696 c
108.47735 409.00677 108.18142 409.32680 108.00935 409.72280 c
107.83729 410.11483 107.74942 410.94680 107.74942 412.21077 c
107.74942 419.37080 L
106.20142 419.37080 L
106.20142 421.01093 L
107.74942 421.01093 L
107.74942 424.09502 L
109.84932 425.35899 L
109.84932 421.01093 L
111.96935 421.01093 L
111.96935 419.37080 L
109.84932 419.37080 L
109.84932 412.09483 l
109.84932 411.49077 109.88532 411.10696 109.95732 410.93490 c
110.03329 410.76283 110.15348 410.62677 110.32129 410.52274 c
110.48939 410.42296 110.72948 410.37080 111.04129 410.37080 c
111.27742 410.37080 111.58526 410.39887 111.96935 410.45471 C
@c
F

@rax %Note: Object
327.20485 358.15351 496.88617 472.06545 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 3.99997 3.99997 0.00000 @w
327.20485 472.06545 m
369.22280 472.06545 480.51524 463.39030 487.39351 418.66923 c
490.77978 396.65282 496.88617 380.64643 496.88617 358.15351 C
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 4.00025 4.00025 0 @w
507.34290 359.80157 m
496.88617 340.79244 L
486.42945 359.80157 L
507.34290 359.80157 L
f
@J

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
